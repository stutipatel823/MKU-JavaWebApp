apiVersion: v1
kind: Namespace
metadata:
  name: frontend-namespace
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: frontend-namespace
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi  # Size of the persistent volume
  storageClassName: standard
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-db
  namespace: frontend-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-db
  template:
    metadata:
      labels:
        app: mysql-db
    spec:
      containers:
      - name: mysql-db
        image: mysql:8.0  # Use the official MySQL image
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "root1234"
        - name: MYSQL_DATABASE
          value: "Frontend_MKU"
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: mysql-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-storage
        persistentVolumeClaim:
          claimName: mysql-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
  namespace: frontend-namespace
spec:
  selector:
    app: mysql-db
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
  clusterIP: None  # Internal communication only
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-app
  namespace: frontend-namespace
spec:
  replicas: 2  # High availability with two replicas
  selector:
    matchLabels:
      app: frontend-app
  template:
    metadata:
      labels:
        app: frontend-app
    spec:
      containers:
      - name: frontend-app
        image: stutipatel8/learn:frontendWebApp
        ports:
        - containerPort: 8080
        env:
        - name: DB_HOST
          value: "mysql-service"
        - name: DB_PORT
          value: "3306"
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-app-service
  namespace: frontend-namespace
spec:
  selector:
    app: frontend-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: LoadBalancer  # Expose the service to the internet
